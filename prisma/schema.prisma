generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SecondaryUser {
  id             Int       @id @default(autoincrement())
  email          String    @unique(map: "user_name") @db.VarChar(50)
  password       String    @db.VarChar(255)
  series_id      String?   @db.VarChar(60)
  remember_token String?   @db.VarChar(255)
  expires        DateTime? @db.DateTime(0)
  user_type      String    @db.VarChar(10)
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @default(now()) @db.Timestamp(0)
  user_info      SecondaryUserInfo?
}

model SecondaryUserInfo {
  id            Int       @id @default(autoincrement())
  account       SecondaryUser   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       Int       @unique
  name          String    @db.VarChar(45)
  gender        String?   @db.VarChar(6)
  address       String?   @db.VarChar(100)
  city          String?   @db.VarChar(15)
  state         String?   @db.VarChar(30)
  phone         String?   @db.VarChar(15)
  email         String?   @db.VarChar(50)
  date_of_birth DateTime? @db.Date
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)

  @@index([user_id])
}